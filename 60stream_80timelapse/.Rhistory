geom_ribbon(aes(ymax = mean + sd, ymin = mean - sd),
alpha = 0.15,
fill = "grey70",
colour=NA)
ribbonplot
View(summaryMsd)
summaryMsd <- data_summary(msds_joined, varname="msd",
groupnames=c('length_category', 'timepoint'))
summaryMsd <- data_summary(msds_joined, varname="msd",
groupnames=c('length_cat', 'timepoint'))
ribbonplot <- ggplot(summaryMsd %>% filter(timepoint < 10), aes(timepoint, mean, group = length_cat, color = length_cat)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean + sd, ymin = mean - sd),
alpha = 0.15,
fill = "grey70",
colour=NA)
ribbonplot
ribbonplot <- ggplot(summaryMsd %>% filter(timepoint < 20), aes(timepoint, mean, group = length_cat, color = length_cat)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean + sd, ymin = mean - sd),
alpha = 0.15,
fill = "grey70",
colour=NA)
ribbonplot
cleanMsd <- function(msds, filter_length){
data_length <- data.frame(TRACK_ID = data$TRACK_ID, length_cat = data$length_category, rep_no = data$rep_no)
data_length <- data_length %>% rename(track_id = TRACK_ID)
msds_joined <- msds %>%inner_join(data_length, by=c('rep_no', 'track_id'))
msds_joined <- msds_joined[-6]
msds_joined <- distinct(msds_joined)
msds_joined <- msds_joined %>% filter(length > filter_length)
return(msds_joined)
}
cleanMsd <- function(msds){
data_length <- data.frame(TRACK_ID = data$TRACK_ID, length_cat = data$length_category, rep_no = data$rep_no)
data_length <- data_length %>% rename(track_id = TRACK_ID)
msds_joined <- msds %>%inner_join(data_length, by=c('rep_no', 'track_id'))
msds_joined <- msds_joined[-6]
msds_joined <- distinct(msds_joined)
return(msds_joined)
}
View(data)
cleanMsd <- function(msds, filter_length){
data_length <- data.frame(TRACK_ID = data$TRACK_ID, length_cat = data$length_category, rep_no = data$rep_no)
data_length <- data_length %>% rename(track_id = TRACK_ID)
msds_joined <- msds %>%inner_join(data_length, by=c('rep_no', 'track_id'))
msds_joined <- msds_joined[-6]
msds_joined <- distinct(msds_joined)
msds_joined <- msds_joined %>% filter(length > filter_length)
return(msds_joined)
}
msds_clean <- cleanMsd(msds, 5)
View(msds)
cleanMsd <- function(msds, data, filter_length){
data_length <- data.frame(TRACK_ID = data$TRACK_ID, length_cat = data$length_category, rep_no = data$rep_no)
data_length <- data_length %>% rename(track_id = TRACK_ID)
msds_joined <- msds %>%inner_join(data_length, by=c('rep_no', 'track_id'))
msds_joined <- msds_joined[-6]
msds_joined <- distinct(msds_joined)
msds_joined <- msds_joined %>% filter(length > filter_length)
return(msds_joined)
}
msds_clean <- cleanMsd(msds, data, 5)
View(data)
cleanMsd <- function(msds, data, filter_length){
data_length <- data.frame(TRACK_ID = data$TRACK_ID, length_cat = data$length_category, rep_no = data$rep_no)
data_length <- data_length %>% rename(TRACK_ID = track_id)
msds_joined <- msds %>%inner_join(data_length, by=c('rep_no', 'track_id'))
msds_joined <- msds_joined[-6]
msds_joined <- distinct(msds_joined)
msds_joined <- msds_joined %>% filter(length > filter_length)
return(msds_joined)
}
msds_clean <- cleanMsd(msds, data, 5)
Msd <- function(msds, data, filter_length){
data_length <- data.frame(TRACK_ID = data$TRACK_ID, length_cat = data$length_category, rep_no = data$rep_no)
data_length <- data_length %>% dplyr::rename(track_id = TRACK_ID
cleanMsd <- function(msds, data, filter_length){
data_length <- data.frame(TRACK_ID = data$TRACK_ID, length_cat = data$length_category, rep_no = data$rep_no)
data_length <- data_length %>% dplyr::rename(track_id = TRACK_ID)
msds_joined <- msds %>%inner_join(data_length, by=c('rep_no', 'track_id'))
msds_joined <- msds_joined[-6]
msds_joined <- distinct(msds_joined)
msds_joined <- msds_joined %>% filter(length > filter_length)
return(msds_joined)
}
cleanMsd <- function(msds, data, filter_length){
data_length <- data.frame(TRACK_ID = data$TRACK_ID, length_cat = data$length_category, rep_no = data$rep_no)
data_length <- data_length %>% dplyr::rename(track_id = TRACK_ID)
msds_joined <- msds %>%inner_join(data_length, by=c('rep_no', 'track_id'))
msds_joined <- msds_joined[-6]
msds_joined <- distinct(msds_joined)
msds_joined <- msds_joined %>% filter(length > filter_length)
return(msds_joined)
}
msds_clean <- cleanMsd(msds, data, 5)
View(msds_clean)
#AUtomatic grouping
data$group <- as.numeric(cut(data$duration_sec, 20))
View(data)
plot_mean <- plotNormMean(data)
plot_mean
summary <- data %>%
filter(FRAME < 10) %>%
group_by(group, FRAME) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
View(summary)
summary <- data %>%
filter(FRAME < 10) %>%
group_by(group, FRAME) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
View(summary)
summary <- data %>%
filter(FRAME < 10) %>%
group_by(group, timepoint) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
View(summary)
summary <- data %>%
filter(timepoint < 10) %>%
group_by(group, timepoint) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
View(summary)
summary <- data %>%
filter(timepoint < 10) %>%
group_by(group) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
View(summary)
data %>% filter(timepoint <10)
summarize(data %>% group_by(group))
summary <- data %>%
filter(timepoint < 10) %>%
group_by(length_category, timepoint) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
View(summary)
summary <- data %>%
filter(FRAME < 60) %>%
group_by(group, timepoint) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
library(dplyr)
summary <- data %>%
filter(FRAME < 60) %>%
group_by(group, timepoint) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
View(summary)
data_filtered <- data %>% filter(duration_sec < 40)
View(data_filtered)
#AUtomatic grouping
data_filtered$group <- as.numeric(cut(data_filtered$duration_sec, 20))
summary <- data_filtered %>%
filter(FRAME < 60) %>%
group_by(group, timepoint) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
View(summary)
summary_length <- data_filtered %>%
filter(FRAME < 60) %>%
group_by(group, timepoint) %>%
summarize(duration_sec = mean(duration_sec), sd= sd(duration_sec))
View(summary_length)
summary_length <- data_filtered %>%
filter(FRAME < 60) %>%
group_by(group) %>%
summarize(duration_sec = mean(duration_sec), sd= sd(duration_sec))
ribbonplot1 <- ggplot(summary %>% filter(timepoint<10), aes(timepoint, mean_intensity, group = group, color = group)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean_intensity + sd, ymin = mean_intensity - sd),
alpha = 0.15,
fill = "grey70",
colour=NA)
library(ggplot2)
ribbonplot1 <- ggplot(summary %>% filter(timepoint<10), aes(timepoint, mean_intensity, group = group, color = group)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean_intensity + sd, ymin = mean_intensity - sd),
alpha = 0.15,
fill = "grey70",
colour=NA)
ribbonplot1
ribbonplot1 <- ggplot(summary %>% filter(timepoint<10), aes(timepoint, mean_intensity, group = group, color = group)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean_intensity + sd, ymin = mean_intensity - sd),
alpha = 0.1,
fill = "grey70",
colour=NA)
ribbonplot1
View(data_filtered)
summary <- data_filtered %>%
filter(FRAME < 60) %>%
group_by(group, length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
ribbonplot1 <- ggplot(summary %>% filter(timepoint<10), aes(timepoint, mean_intensity, group = group, color = group)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean_intensity + sd, ymin = mean_intensity - sd),
alpha = 0.1,
fill = "grey70",
colour=NA)
ribbonplot1 <- ggplot(summary %>% filter(timepoint<10), aes(timepoint, mean_intensity, group = length_category, color = length_category)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean_intensity + sd, ymin = mean_intensity - sd),
alpha = 0.1,
fill = "grey70",
colour=NA)
summary <- data_filtered %>%
filter(FRAME < 60) %>%
group_by(timepoint, length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
ribbonplot1 <- ggplot(summary %>% filter(timepoint<10), aes(timepoint, mean_intensity, group = length_category, color = length_category)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean_intensity + sd, ymin = mean_intensity - sd),
alpha = 0.1,
fill = "grey70",
colour=NA)
ribbonplot1
summary <- data %>%
filter(FRAME < 60) %>%
group_by(timepoint, length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
ribbonplot1 <- ggplot(summary %>% filter(timepoint<10), aes(timepoint, mean_intensity, group = length_category, color = length_category)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean_intensity + sd, ymin = mean_intensity - sd),
alpha = 0.1,
fill = "grey70",
colour=NA)
ribbonplot1
data.pca <- prcomp(data_datapca[,c(4, 13:21)], center = TRUE,scale. = TRUE)
data.pca <- prcomp(data[,c(4, 13:21)], center = TRUE,scale. = TRUE)
summary(data.pca)
library(ggbiplot)
pca <- ggbiplot(data.pca,ellipse=TRUE, groups=data$length_category)
pca
pca <- ggbiplot(data.pca,ellipse=TRUE, choices=c(3,4), groups=data$length_category)
pca
#Filter
data_filtered <- data %>% filter(duration_sec>0.25)
View(data_filtered)
data.pca <- prcomp(data_filtered[,c(4, 13:21)], center = TRUE,scale. = TRUE)
pca <- ggbiplot(data.pca,ellipse=TRUE, groups=data_filtered$length_category)
pca
install.packages('factominer')
install.packages('FactoMineR')
library(FactoMineR)
fviz_pca_ind(data.pca,
geom.ind = "point", # show points only (nbut not "text")
col.ind = data$length_category, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
legend.title = "Groups"
)
install.packages("factoextra")
library(factoextra)
fviz_pca_ind(data.pca,
geom.ind = "point", # show points only (nbut not "text")
col.ind = data$length_category, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
legend.title = "Groups"
)
fviz_pca_ind(data.pca,
geom.ind = "point", # show points only (nbut not "text")
col.ind = data_filtered$length_category, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
legend.title = "Groups"
)
#Make PCA
data.active <- data_filtered[4, 13:21]
res.pca <- PCA(data.active, graph = FALSE)
data.active
View(data.active)
#Make PCA
data.active <- data_filtered[,c(4, 13:21)]
data.active
View(data.active)
res.pca <- PCA(data.active, graph = FALSE)
head(res.pca)
print(res.pca)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(res.pca)
var
fviz_pca_var(res.pca, col.var = "black")
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
fviz_pca_var(res.pca, col.var = "black")
corrplot(var$contrib, is.corr=FALSE)
fviz_pca_var(res.pca, col.var = data_filtered$length_category,
gradient.cols = c("blue", "yellow", "red"),
legend.title = "Cont.Var")
fviz_pca_var(res.pca, col.var = data_filtered[,c(4, 13:21)]$length_category,
gradient.cols = c("blue", "yellow", "red"),
legend.title = "Cont.Var")
set.seed(123)
res.km <- kmeans(var$coord, centers = 3, nstart = 25)
grp <- as.factor(res.km$cluster)
grp
fviz_pca_var(res.pca, col.var = grp,
palette = c("#0073C2FF", "#EFC000FF", "#868686FF"),
legend.title = "Cluster")
ind <- get_pca_ind(res.pca)
ind
fviz_pca_ind(res.pca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping (slow if many points)
)
fviz_pca_ind(res.pca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = F # Avoid text overlapping (slow if many points)
)
HCPC(res, nb.clust = 0, min = 3, max = NULL, graph = TRUE)
HCPC(res.pca, nb.clust = 0, min = 3, max = NULL, graph = TRUE)
res.hcpc <- HCPC(res.pca, graph = FALSE)
fviz_dend(res.hcpc,
cex = 0.7,                     # Label size
palette = "jco",               # Color palette see ?ggpubr::ggpar
rect = TRUE, rect_fill = TRUE, # Add rectangle around groups
rect_border = "jco",           # Rectangle color
labels_track_height = 0.8      # Augment the room for labels
)
View(data)
View(data)
summary <- data %>%
group_by(TRACK_ID, rep_no) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), mean_norm_intensity = mean(normalized_mean_int), sd = sd(normalized_mean_int), length=mean(duration_sec))
duration <- ggplot(summary, aes(x = length)) + geom_density(aes(fill = rep_no), alpha = 0.4) +
geom_vline(aes(xintercept = mean(length)),
linetype = "dashed", size = 0.6)
duration
View(summary)
summary <- data %>%
group_by(TRACK_ID, rep_no) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), mean_norm_intensity = mean(normalized_mean_int), sd = sd(normalized_mean_int), length=mean(duration_sec))
library(dplyr)
summary <- data %>%
group_by(TRACK_ID, rep_no) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), mean_norm_intensity = mean(normalized_mean_int), sd = sd(normalized_mean_int), length=mean(duration_sec))
View(testdata)
View(summary)
duration <- ggplot(summary, aes(x = length)) + geom_density(aes(fill = rep_no), alpha = 0.4) +
geom_vline(aes(xintercept = mean(length)),
linetype = "dashed", size = 0.6)
library(ggplot2)
duration <- ggplot(summary, aes(x = length)) + geom_density(aes(fill = rep_no), alpha = 0.4) +
geom_vline(aes(xintercept = mean(length)),
linetype = "dashed", size = 0.6)
duration
duration <- ggplot(summary, aes(x = length)) + geom_density(alpha = 0.4) +
geom_vline(aes(xintercept = mean(length)),
linetype = "dashed", size = 0.6)
duration
#SUmmary of TRACKS for PCA
summary_tracks <- data %>%
filter(FRAME < 60)
View(summary_tracks)
#SUmmary of TRACKS for PCA
summary_tracks <- data %>%
filter(duration_sec > 0.25)
#SUmmary of TRACKS for PCA
summary_tracks <- data %>%
filter(duration_sec > 0.25) %>%
group_by(TRACK_ID, rep_no) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), max_intensity = mean(MAX_INTENSITY), sd = sd(normalized_mean_int), length=mean(duration_sec))
#SUmmary of TRACKS for PCA
summary_lengths <- data %>%
filter(duration_sec > 0.25) %>%
group_by(length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), max_intensity = mean(MAX_INTENSITY), sd = sd(normalized_mean_int), length=mean(duration_sec))
View(summary_lengths)
View(data)
#SUmmary of TRACKS for PCA
summary_lengths <- data %>%
group_by(length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), max_intensity = mean(MAX_INTENSITY), sd = sd(normalized_mean_int), length=mean(duration_sec))
View(summary_lengths)
#SUmmary of TRACKS for PCA
summary_lengths <- data %>%
filter(duration_sec > 0.25) %>%
group_by(length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), max_intensity = mean(MAX_INTENSITY), sd = sd(normalized_mean_int), length=mean(duration_sec))
#SUmmary of TRACKS for PCA
summary_lengths <- data %>%
group_by(length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), max_intensity = mean(MAX_INTENSITY), sd = sd(normalized_mean_int), length=mean(duration_sec))
#SUmmary of TRACKS for PCA
summary_lengths <- data %>%
group_by(length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), max_intensity = mean(MAX_INTENSITY), sd = sd(normalized_mean_int), length=mean(duration_sec))
#SUmmary of TRACKS for PCA
summary_lengths <- data %>% filter(timepoint < 10) %>%
filter(duration_sec > 0.25) %>%
group_by(length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), max_intensity = mean(MAX_INTENSITY), sd = sd(normalized_mean_int), length=mean(duration_sec))
View(summary_lengths)
t.test(MEAN_INTENSITY ~ length_category, data = data %>% filter(timepoint < 10))
t.test(MEAN_INTENSITY ~ length_category, data = data)
with(data %>% filter(timepoint < 10), t.test(MEAN_INTENSITY[length_category == short], MEAN_INTENSITY[length_category == middle]))
length_stats <- data %>% filter(timepoint < 10) %>%
group_by(length_category) %>%
get_summary_stats(MEAN_INTENSITY, type = "mean_sd")
library(rstatix)
length_stats <- data %>% filter(timepoint < 10) %>%
group_by(length_category) %>%
get_summary_stats(MEAN_INTENSITY, type = "mean_sd")
View(length_stats)
res.aov <- PlantGrowth %>% anova_test(MEAN_INTENSITY ~ length_category)
res.aov
res.aov <- data %>% filter(timepoint < 10) %>% anova_test(MEAN_INTENSITY ~ length_category)
res-aov
res.aov
pwc <- data %>% filter(timepoint < 10) %>%
pairwise_t_test(weight ~ group, p.adjust.method = "bonferroni")
pwc <- data %>% filter(timepoint < 10) %>%
pairwise_t_test(MEAN_INTENSITY ~ length_category, p.adjust.method = "bonferroni")
pwc
ggboxplot(data %>% filter(timepoint < 10), x = "length_category", y = "MEAN_INTENSITY") +
stat_pvalue_manual(pwc, hide.ns = TRUE, label = "p.adj.signif") +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
library(ggplot2)
ggboxplot(data %>% filter(timepoint < 10), x = "length_category", y = "MEAN_INTENSITY") +
stat_pvalue_manual(pwc, hide.ns = TRUE, label = "p.adj.signif") +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
library(ggpubr)
ggboxplot(data %>% filter(timepoint < 10), x = "length_category", y = "MEAN_INTENSITY") +
stat_pvalue_manual(pwc, hide.ns = TRUE, label = "p.adj.signif") +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
pwc <- pwc %>% add_xy_position(x = "length_category")
ggboxplot(data %>% filter(timepoint < 10), x = "length_category", y = "MEAN_INTENSITY") +
stat_pvalue_manual(pwc, hide.ns = TRUE, label = "p.adj.signif") +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
pwc
ggboxplot(data %>% filter(timepoint < 10), x = "length_category", y = "MEAN_INTENSITY") +
stat_pvalue_manual(pwc, label = "p.adj", tip.length = 0, step.increase = 0.1) +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
pwc <- pwc %>% add_xy_position(x = "MEAN_INTENSITY")
ggboxplot(data %>% filter(timepoint < 10), x = "length_category", y = "MEAN_INTENSITY") +
stat_pvalue_manual(pwc, label = "p.adj", tip.length = 0, step.increase = 0.1) +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
ggboxplot(data %>% filter(timepoint < 10), x = "length_category", y = "MEAN_INTENSITY") +
stat_pvalue_manual(pwc, hide.ns = TRUE, label = "p.adj.signif") +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
pwc
length_stats_track <- data %>% filter(timepoint < 10) %>%
group_by(length_category, TRACK_ID, rep_no) %>%
get_summary_stats(MEAN_INTENSITY, type = "mean_sd")
View(length_stats_track)
length_stats_track_summary <- length_stats_track
group_by(length_category) %>%
get_summary_stats(MEAN_INTENSITY, type = "mean_sd")
length_stats_track_summary <- length_stats_track %>%
group_by(length_category) %>%
get_summary_stats(MEAN_INTENSITY, type = "mean_sd")
length_stats_track_summary <- length_stats_track %>%
group_by(length_category) %>%
get_summary_stats(mean, type = "mean_sd")
View(length_stats_track_summary)
pwc_tracks <- length_stats_track %>%
pairwise_t_test(mean ~ length_category, p.adjust.method = "bonferroni")
pwc_tracks
pwc <- pwc %>% add_xy_position(x = "length_category")
ggboxplot(data %>% filter(timepoint < 10), x = "length_category", y = "MEAN_INTENSITY") +
stat_pvalue_manual(pwc, label = "p.adj", tip.length = 0, step.increase = 0.1) +
labs(
subtitle = get_test_label(res.aov, detailed = TRUE),
caption = get_pwc_label(pwc)
)
res.aov <- data %>% filter(timepoint < 10, FRAME < 60) %>% anova_test(MEAN_INTENSITY ~ length_category)
res.aov
length_stats <- data %>% filter(timepoint < 10, FRAME < 60) %>%
group_by(length_category) %>%
get_summary_stats(MEAN_INTENSITY, type = "mean_sd")
length_stats
summary <- data %>%
filter(FRAME < 60) %>%
group_by(timepoint, length_category) %>%
summarize(mean_intensity = mean(MEAN_INTENSITY), sd= sd(MEAN_INTENSITY))
ribbonplot1 <- ggplot(summary %>% filter(timepoint<10), aes(timepoint, mean_intensity, group = length_category, color = length_category)) +
geom_line() +
geom_point() +
geom_ribbon(aes(ymax = mean_intensity + sd, ymin = mean_intensity - sd),
alpha = 0.1,
fill = "grey70",
colour=NA)
ribbonplot1
View(length_stats_track_summary)
View(length_stats_track)
View(data)
